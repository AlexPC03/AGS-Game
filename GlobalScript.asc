// main global script file
int paso=0;
export paso;
// called when the game starts, before the first room is loaded
function game_start()
{
  Game.SpeechFont=eFontFont3;
  gGUI_ACT_BOTTOM.Visible=false;
  gGUI_INV_TOP.Visible=false;
}

// called on every game cycle, except when the game is blocked
function repeatedly_execute()
{
}

// called on every game cycle, even when the game is blocked
function repeatedly_execute_always()
{
}

// called when a key is pressed
function on_key_press(eKeyCode keycode)
{
  if (IsGamePaused())
  {
    // game paused, so don't react to any keypresses
    keycode = 0;
  }
  else if (keycode == eKeyCtrlQ)
  {
    // Ctrl-Q will quit the game
    QuitGame(1);
  }
  else if (keycode == eKeyF9)
  {
    // F9 will restart the game
    RestartGame();
  }
  else if (keycode == eKeyF12)
  {
    // F12 will save a screenshot to the save game folder
    SaveScreenShot("screenshot.pcx");
  }
  else if (keycode == eKeyCtrlS)
  {
    // Ctrl-S will give the player all defined inventory items
    Debug(0, 0);
  }
  else if (keycode == eKeyCtrlV)
  {
    // Ctrl-V will show game engine version and build date
    Debug(1, 0);
  }
  else if (keycode == eKeyCtrlA)
  {
    // Ctrl-A will show walkable areas
    Debug(2, 0);
  }
  else if (keycode == eKeyCtrlX)
  {
    // Ctrl-X will let the player teleport to any room
    Debug(3, 0);
  }
}

// called when a mouse button is clicked
function on_mouse_click(MouseButton button)
{
  if (IsGamePaused())
  {
    // game is paused, so do nothing (i.e. don't process mouse clicks)
  }
  else if (button == eMouseLeft)
  {
    // left-click, so try using the current mouse cursor mode at this position
    Room.ProcessClick(mouse.x, mouse.y, mouse.Mode);
  }
  else if (button == eMouseRight)
  {
    // right-click, so cycle the mouse cursor mode
    mouse.SelectNextMode();
  }
}

function dialog_request(int param) {
}


function PlatanoItem_Look()
{
  player.Say("No me apetece fruta ahora mismo");
}

function FusilItem_Look()
{
  player.Say("Prefiero guardar el disparo para la próxima vez que vea a Barbosa");
}


function gGUI_RETRATO_1_OnClick(GUI *theGui, MouseButton button)
{

}

function cTestChar_Interact()
{

}

function Button9_OnClick(GUIControl *control, MouseButton button)
{
  player.ChangeRoom(100, 200, 200);
  
}



function Button10_OnClick(GUIControl *control, MouseButton button)
{
  player.ChangeRoom(1, 800, 700);
}

function cTestChar_Talk()
{
  
  cTestChar.Say("Has interactuado conmigo!");
  cTestChar.Say("Hola, soy un NPC de testeo. Tengo mazo de interacciones.");
  cTestChar.Say("Esto son textos con un say!");
  cTestChar.Say("Todo lo que diga a partir de ahora sera dentro de un dialog.");
  cTestChar.Say("Iniciando: dialog 'dtest01'...");
  dtest01.Start();
  
}
function cMonoCharacter_Look()
{
  player.Say("Más monos no por favor…");
}

function cMonoCharacter_Interact()
{
  player.Say("No me voy a acercar a ese bicho…");
}

function cMonoCharacter_Talk()
{
  Wait(30);
  dMono1.Start();
}
